{
	"info": {
		"_postman_id": "d1430d13-5358-4f9f-8d4f-136bce03af41",
		"name": "Booking",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26879172"
	},
	"item": [
		{
			"name": "Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"id\", jsonData.bookingid)\r",
							"\r",
							"pm.test(\"Status code : 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstname=pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstname)\r",
							"pm.environment.set(\"firstname\",firstname)\r",
							"var lastname=pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastname)\r",
							"pm.environment.set(\"lastname\",lastname)\r",
							"const moment= require('moment')\r",
							"const today = moment()\r",
							"\r",
							"pm.environment.set(\"checkin\",today.format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"checkout\",today.add(10, 'day').format(\"YYYY-MM-DD\"))\r",
							"console.log(today.format(\"YYYY-MM-DD\"))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstname}}\",\r\n\t\"lastname\" : \"{{lastname}}\",\r\n\t\"totalprice\" : 112,\r\n\t\"depositpaid\" : true,\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"Lunch\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var code=pm.response.code\r",
							"console.log(code)\r",
							"\r",
							"switch(code){\r",
							"case 200:\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"First name validation \", function()\r",
							"{\r",
							"    pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstname\"))\r",
							"})\r",
							"pm.test(\"Last name validation \", function()\r",
							"{\r",
							"    pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastname\"))\r",
							"})\r",
							"pm.test(\"Deposite paid validation \", function()\r",
							"{\r",
							"    pm.expect(jsonData.depositpaid).to.eql(true)\r",
							"})\r",
							"pm.test(\"Check In \", function()\r",
							"{\r",
							"    pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"))\r",
							"})\r",
							"pm.test(\"Check Out \", function()\r",
							"{\r",
							"    pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"))\r",
							"})\r",
							"\r",
							"break;\r",
							"case 404:\r",
							"pm.test (\"Not found\")\r",
							"\r",
							"break;\r",
							"case 400:\r",
							"pm.test (\"Bad Request\")\r",
							"break;\r",
							"\r",
							"case 500:\r",
							"pm.test (\"Internal Server Error\")\r",
							"\r",
							"break;\r",
							"case 429:\r",
							"pm.test (\"Too Many requests\")\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking/ {{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						" {{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var tokenData = pm.response.json()\r",
							"pm.environment.set(\"token\",tokenData.token)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"Ifrana\",\r\n\t\"lastname\" : \"Zahan\",\r\n\t\"totalprice\" : 112,\r\n\t\"depositpaid\" : true,\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"2023-01-04\",\r\n    \t\"checkout\" : \"2023-05-16\"\r\n\t},\r\n\t\"additionalneeds\" : \"Lunch\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking/ {{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						" {{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var code=pm.response.code\r",
							"console.log(code)\r",
							"\r",
							"switch(code){\r",
							"case 200:\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"First name validation \", function()\r",
							"{\r",
							"    pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstname\"))\r",
							"})\r",
							"pm.test(\"Last name validation \", function()\r",
							"{\r",
							"    pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastname\"))\r",
							"})\r",
							"pm.test(\"Deposite paid validation \", function()\r",
							"{\r",
							"    pm.expect(jsonData.depositpaid).to.eql(true)\r",
							"})\r",
							"pm.test(\"Check In \", function()\r",
							"{\r",
							"    pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"))\r",
							"})\r",
							"pm.test(\"Check Out \", function()\r",
							"{\r",
							"    pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"))\r",
							"})\r",
							"\r",
							"break;\r",
							"case 404:\r",
							"pm.test (\"Not found\")\r",
							"\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking/ {{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						" {{id}}"
					]
				}
			},
			"response": []
		}
	]
}